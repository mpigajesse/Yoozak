# Generated by Django 5.1.8 on 2025-04-08 02:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(choices=[('CLIENTS', 'Pôle Clients'), ('COMMANDES', 'Pôle Commandes'), ('PRODUCTS', 'Pôle Produits')], max_length=50, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poles_diriges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pôle',
                'verbose_name_plural': 'Pôles',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('pole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='users.pole')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_diriges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['pole__nom', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='ServiceMembre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('date_affectation', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'affectation")),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Membre de service',
                'verbose_name_plural': 'Membres de service',
                'unique_together': {('service', 'user')},
            },
        ),
        migrations.AddField(
            model_name='service',
            name='membres',
            field=models.ManyToManyField(blank=True, related_name='services', through='users.ServiceMembre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams_dirigees', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='users.service')),
            ],
            options={
                'verbose_name': 'Équipe',
                'verbose_name_plural': 'Équipes',
                'ordering': ['service__nom', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='TeamMembre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('date_affectation', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'affectation")),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Membre d'équipe",
                'verbose_name_plural': "Membres d'équipe",
                'unique_together': {('team', 'user')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='membres',
            field=models.ManyToManyField(blank=True, related_name='teams', through='users.TeamMembre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('matricule', models.CharField(max_length=50, unique=True, verbose_name='Matricule')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/photos/', verbose_name='Photo')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('adresse', models.TextField(blank=True, verbose_name='Adresse')),
                ('date_embauche', models.DateField(blank=True, null=True, verbose_name="Date d'embauche")),
                ('poste', models.CharField(blank=True, max_length=100, verbose_name='Poste')),
                ('biographie', models.TextField(blank=True, verbose_name='Biographie')),
                ('competences', models.JSONField(blank=True, default=list, verbose_name='Compétences')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('nom', 'pole')},
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('nom', 'service')},
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('role', models.CharField(choices=[('SUPERADMIN', 'Super Administrateur'), ('ADMIN', 'Administrateur'), ('MANAGER', 'Manager'), ('EMPLOYEE', 'Employé'), ('EXTERNAL', 'Externe'), ('DIRECTEUR_CLIENTS', 'Directeur Clients'), ('RESPONSABLE_CRM', 'Responsable CRM'), ('GESTIONNAIRE_AVIS', 'Gestionnaire Avis'), ('DIRECTEUR_COMMANDES', 'Directeur Commandes'), ('RESPONSABLE_LOGISTIQUE', 'Responsable Logistique'), ('GESTIONNAIRE_PROMO', 'Gestionnaire Promo'), ('DIRECTEUR_PRODUITS', 'Directeur Produits'), ('RESPONSABLE_CATALOGUE', 'Responsable Catalogue'), ('GESTIONNAIRE_PROMOTION', 'Gestionnaire Promotion')], max_length=50, verbose_name='Rôle')),
                ('date_attribution', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'attribution")),
                ('pole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles_utilisateurs', to='users.pole')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles_utilisateurs', to='users.service')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles_utilisateurs', to='users.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rôle utilisateur',
                'verbose_name_plural': 'Rôles utilisateurs',
                'constraints': [models.UniqueConstraint(fields=('user', 'role', 'pole', 'service', 'team'), name='unique_user_role')],
            },
        ),
    ]
