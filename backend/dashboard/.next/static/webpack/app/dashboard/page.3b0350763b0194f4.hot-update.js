"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculatePercentage: function() { return /* binding */ calculatePercentage; },\n/* harmony export */   capitalize: function() { return /* binding */ capitalize; },\n/* harmony export */   cn: function() { return /* binding */ cn; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   formatDateTime: function() { return /* binding */ formatDateTime; },\n/* harmony export */   formatPrice: function() { return /* binding */ formatPrice; },\n/* harmony export */   generateId: function() { return /* binding */ generateId; },\n/* harmony export */   generatePagination: function() { return /* binding */ generatePagination; },\n/* harmony export */   getDateRangeFromFilter: function() { return /* binding */ getDateRangeFromFilter; },\n/* harmony export */   getInitials: function() { return /* binding */ getInitials; },\n/* harmony export */   getRandomColor: function() { return /* binding */ getRandomColor; },\n/* harmony export */   getStatusColor: function() { return /* binding */ getStatusColor; },\n/* harmony export */   responsiveButton: function() { return /* binding */ responsiveButton; },\n/* harmony export */   responsiveCard: function() { return /* binding */ responsiveCard; },\n/* harmony export */   responsiveContainer: function() { return /* binding */ responsiveContainer; },\n/* harmony export */   responsiveGrid: function() { return /* binding */ responsiveGrid; },\n/* harmony export */   responsiveSpacing: function() { return /* binding */ responsiveSpacing; },\n/* harmony export */   responsiveText: function() { return /* binding */ responsiveText; },\n/* harmony export */   toQueryString: function() { return /* binding */ toQueryString; },\n/* harmony export */   truncateText: function() { return /* binding */ truncateText; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\n/**\r\n * Combine plusieurs classes CSS ensemble tout en résolvant les conflits de Tailwind\r\n * en utilisant clsx pour traiter les conditions et twMerge pour fusionner intelligemment les classes\r\n */ function cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\r\n * Formate un prix avec le symbole de la devise\r\n */ function formatPrice(price) {\n    let currency = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"€\", locale = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"fr-FR\";\n    return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currency === \"€\" ? \"EUR\" : currency\n    }).format(price);\n}\n/**\r\n * Tronque un texte à la longueur spécifiée et ajoute \"...\" si nécessaire\r\n */ function truncateText(text, maxLength) {\n    if (text.length <= maxLength) return text;\n    return text.slice(0, maxLength) + \"...\";\n}\n/**\r\n * Crée une liste d'éléments pour la pagination\r\n */ function generatePagination(currentPage, totalPages) {\n    // Si le nombre total de pages est 7 ou moins,\n    // afficher toutes les pages\n    if (totalPages <= 7) {\n        return Array.from({\n            length: totalPages\n        }, (_, i)=>i + 1);\n    }\n    // Si la page actuelle est parmi les 3 premières,\n    // afficher les 5 premières, \"...\" et la dernière\n    if (currentPage <= 3) {\n        return [\n            1,\n            2,\n            3,\n            4,\n            5,\n            \"...\",\n            totalPages\n        ];\n    }\n    // Si la page actuelle est parmi les 3 dernières,\n    // afficher la première, \"...\" et les 5 dernières\n    if (currentPage >= totalPages - 2) {\n        return [\n            1,\n            \"...\",\n            totalPages - 4,\n            totalPages - 3,\n            totalPages - 2,\n            totalPages - 1,\n            totalPages\n        ];\n    }\n    // Sinon, afficher la première, \"...\", la page actuelle et ses voisines, \"...\" et la dernière\n    return [\n        1,\n        \"...\",\n        currentPage - 1,\n        currentPage,\n        currentPage + 1,\n        \"...\",\n        totalPages\n    ];\n}\n/**\r\n * Obtient une couleur en fonction du statut\r\n */ function getStatusColor(status) {\n    const statusMap = {\n        success: \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-500\",\n        processing: \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-500\",\n        pending: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-500\",\n        failed: \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-500\",\n        canceled: \"bg-gray-100 text-gray-800 dark:bg-gray-800/30 dark:text-gray-400\"\n    };\n    return statusMap[status.toLowerCase()] || statusMap.pending;\n}\n/**\r\n * Convertit une date en format lisible\r\n */ function formatDate(date) {\n    let locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"fr-FR\";\n    const dateObj = date instanceof Date ? date : new Date(date);\n    return new Intl.DateTimeFormat(locale, {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\"\n    }).format(dateObj);\n}\n/**\r\n * Convertit une date et heure en format lisible\r\n */ function formatDateTime(date) {\n    let locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"fr-FR\";\n    const dateObj = date instanceof Date ? date : new Date(date);\n    return new Intl.DateTimeFormat(locale, {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }).format(dateObj);\n}\n/**\r\n * Génère une plage de dates pour un filtre\r\n */ function getDateRangeFromFilter(filter) {\n    const now = new Date();\n    const end = new Date(now);\n    let start = new Date(now);\n    switch(filter){\n        case \"today\":\n            start.setHours(0, 0, 0, 0);\n            break;\n        case \"yesterday\":\n            start.setDate(start.getDate() - 1);\n            start.setHours(0, 0, 0, 0);\n            end.setDate(end.getDate() - 1);\n            end.setHours(23, 59, 59, 999);\n            break;\n        case \"thisWeek\":\n            start.setDate(start.getDate() - start.getDay());\n            start.setHours(0, 0, 0, 0);\n            break;\n        case \"thisMonth\":\n            start.setDate(1);\n            start.setHours(0, 0, 0, 0);\n            break;\n        case \"lastMonth\":\n            start.setMonth(start.getMonth() - 1);\n            start.setDate(1);\n            start.setHours(0, 0, 0, 0);\n            end.setDate(0);\n            end.setHours(23, 59, 59, 999);\n            break;\n        case \"last30days\":\n            start.setDate(start.getDate() - 30);\n            break;\n        case \"last90days\":\n            start.setDate(start.getDate() - 90);\n            break;\n        default:\n            start.setDate(start.getDate() - 7); // par défaut: derniers 7 jours\n    }\n    return {\n        start,\n        end\n    };\n}\n/**\r\n * Extrait les initiales d'un nom\r\n * @param name - Le nom complet\r\n * @returns Les initiales (maximum 2)\r\n */ function getInitials(name) {\n    if (!name) return \"\";\n    return name.split(\" \").map((part)=>part.charAt(0).toUpperCase()).slice(0, 2).join(\"\");\n}\n// Calculer le pourcentage\nfunction calculatePercentage(value, total) {\n    if (total === 0) return 0;\n    return Math.round(value / total * 100);\n}\n// Générer un ID unique\nfunction generateId() {\n    return Math.random().toString(36).substring(2, 9);\n}\n// Convertir un objet en paramètres de requête\nfunction toQueryString(params) {\n    return Object.entries(params).filter((param)=>{\n        let [_, value] = param;\n        return value !== undefined && value !== null && value !== \"\";\n    }).map((param)=>{\n        let [key, value] = param;\n        return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(String(value)));\n    }).join(\"&\");\n}\n// Obtenir une couleur aléatoire\nfunction getRandomColor() {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for(let i = 0; i < 6; i++){\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n// Mettre la première lettre en majuscule\nfunction capitalize(str) {\n    if (!str) return \"\";\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n// Classe de base pour les conteneurs responsive\nconst responsiveContainer = \"w-full px-2 xs:px-3 sm:px-4 md:px-6 lg:px-8\";\n// Classe pour les cartes responsive\nconst responsiveCard = \"w-full rounded-lg bg-white p-3 sm:p-4 md:p-5 shadow-sm dark:bg-gray-800\";\n// Classe pour les grilles responsive\nconst responsiveGrid = \"grid grid-cols-1 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-4 md:gap-5\";\n// Classe pour les textes responsive\nconst responsiveText = {\n    heading: \"text-lg sm:text-xl md:text-2xl font-bold\",\n    subheading: \"text-base sm:text-lg md:text-xl font-semibold\",\n    body: \"text-sm sm:text-base\",\n    small: \"text-xs sm:text-sm\"\n};\n// Utilitaire pour gérer les marges responsive\nconst responsiveSpacing = {\n    sm: \"m-2 sm:m-3 md:m-4\",\n    md: \"m-3 sm:m-4 md:m-5\",\n    lg: \"m-4 sm:m-6 md:m-8\",\n    padding: {\n        sm: \"p-2 sm:p-3 md:p-4\",\n        md: \"p-3 sm:p-4 md:p-5\",\n        lg: \"p-4 sm:p-6 md:p-8\"\n    }\n};\n// Utilitaire pour les boutons responsive\nconst responsiveButton = {\n    sm: \"px-2 py-1 text-xs sm:text-sm rounded\",\n    md: \"px-3 py-1.5 text-sm sm:text-base rounded-md\",\n    lg: \"px-4 py-2 text-base sm:text-lg rounded-lg\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/utils.ts\n"));

/***/ })

});